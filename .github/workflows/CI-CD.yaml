name: Tekton inside Github Actions

# Controls when the workflow will run
on:
  push:
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  run-pipeline:
    name: Run Pipeline
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - uses: engineerd/setup-kind@v0.5.0
      
      - name: Install jq tool
        run: |
          sudo apt-get update
          sudo apt-get install jq
          
      - name: Install Tekton    
        run: |
          export KUBECONFIG="$(kind get kubeconfig-path)"
          kubectl apply --filename https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml
      
      - name: Wait for deployments to be ready
        timeout-minutes: 5
        continue-on-error: true
        run: | 
          # kubectl wait --for=condition=READY=True pods --all -n kube-system
          kubectl wait --for=condition=READY=True pods --all -n tekton-pipelines
          
      - name: Verification
        run: |
          kubectl get namespaces
          kubectl get pods --all-namespaces
          kubectl get deployments --all-namespaces
          
      - uses: jerop/tkn@v0.1.0
      
      - name: Apply Tasks and Pipeline
        run: |
          kubectl apply --filename tekton/hello-world.yaml
          kubectl apply --filename tekton/good-bye-world.yaml
          kubectl apply --filename tekton/hello-goodbye-pipeline.yaml
          
      - name: Show Tekton tasks and pipelines
        run: |
          tkn task list --all-namespaces
          tkn pipeline list --all-namespaces
      - name: PipelineRun and Verification
        run: |
          PIPELINE_RUN_NAME=$(kubectl create -n tekton-pipelines --filename tekton/hello-goodbye-pipeline-run.yaml -o json | jq -r '.metadata.name')
          kubectl -n tekton-pipelines wait --for=condition=SUCCEEDED=True --timeout=180s pipelineruns.tekton.dev/$PIPELINE_RUN_NAME
          tkn pr --namespace tekton-pipelines logs $PIPELINE_RUN_NAME
